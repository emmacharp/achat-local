html {
	text-rendering: geometricPrecision;
}

body {
	overscroll-behavior-y: none;
}

main>section>section svg~* {
	overflow: hidden;
}
main>section>section>*+*,
main>section>div>section>*+* {
	margin-top: calc(var(--Row) * .5);
}

.circle {
	--diameter: calc(var(--Row) * 15);
	width: var(--diameter);
	height: var(--diameter);
	border-radius: 50%;
	/* background-color: var(--yellow); */

	margin-left: calc(-1 * var(--diameter) / 2);
	margin-top: calc(-1 * var(--diameter) / 2);
}

hr {
	line-height: 0;
	height: 0;
	max-height: 0;
	border: none;
	border-top:  2px solid currentColor;
	overflow: visible;
}

.local {
	--Color: var(--ColorLocal);
}

.foreign {
	--Color: var(--ColorForeign);
}

form {
	/* background-color: white; */
	padding: var(--Row);
}

form fieldset {
	display: flex;
	border: none;
	align-items: center;
	flex-wrap: wrap;
	justify-content: space-between;
}

form>*+* {
	margin-top: calc(var(--Row) * 2);
}

fieldset label+label {
	margin-left: var(--Row);
}

fieldset label {
	position: relative;
	display: inline-block;
	box-sizing: border-box;
	line-height: 0;
	color: var(--brown);
	flex-shrink: 0;
	text-transform: lowercase;
}

fieldset label span {
	border: 3px solid currentColor;
	box-shadow: 0 2px 0 0 currentColor;
	padding: calc(var(--Row) / 4) var(--Row);
	border-radius: 8px;
	display: inline-block;
	/* background-color: var(--ColorBg); */
	position: relative;
}

fieldset span {
	--FontWeight: 600;
	--ScaleLevel: var(--Tall);
}

fieldset label:not(:hover) input[type=radio]:not(:checked)~span {
	--Color: inherit;
}

fieldset input[type=radio] {
	appearance: none;
	position: absolute;
	top: 0;
	right: 0;
	bottom: 0;
	left: 0;
	width: 100%;
	z-index: -1;
}

fieldset div {
	position: relative;
	display: flex;
	align-items: center;
}

fieldset p {
	min-width: 30ch;
	flex-basis: 0;
	flex-grow: 1;
}

fieldset div:before {
	content: "";
	width: 100%;
	position: absolute;
	border-top: 3px solid var(--brown);
	margin-top: 5px;
}

fieldset input[type=radio]:checked~span,
fieldset span:hover {
	box-shadow: inset 0 -1px 0 0 currentColor;
	top: 1px;
}

fieldset input[type=radio]:checked~span {
	box-shadow: inset 0 -1px 0 1px currentColor;
	top: 2px;
	background-color: currentColor;
	background-image: linear-gradient(#ffffffa0 0, #ffffffa0 100%);
	background-blend-mode: hard-light;
	filter: contrast(2);
}

main>section>h3 {
	--ScaleLevel: var(--Base);
	font-weight: 700;
	--Color: var(--ltr-brown);
	box-sizing: border-box;
	max-width: max-content;
	box-shadow: inset 0px var(--JS-activated-line) 0px var(--ltst-primary);
	padding-left: var(--Row);
	background-image: linear-gradient(to right, rgba(255,255,255,1), rgba(255,255,255,0) 80em);
}

main>section>h3+.chain {
	margin-top: 0;
}

main>section header+aside {
	width: calc(var(--Row) * 20);
}

main>section section svg {
	height: 8ch;
}

main>section>aside {
	display: flex;
	align-items: center;
}

main>section aside>div {
	background-color: var(--ColorAccent);
	box-shadow: var(--grid-paper-lines), 0px 0px 6px 1px rgba(0,0,0,.06);
	border-radius: 5px;
	padding: calc(var(--Row) * .75);
}

main>section header {
	background-color: var(--ColorBg);
}

main>section header>*+* {
	margin-top: calc(var(--Row) / 2);
}

main>section header small {
	--ScaleLevel: var(--Tall);
	display: block;
	font-weight: 500;
	--Color: var(--lt-brown);

}

main>section aside svg {
	position: relative;
	height: calc(var(--Row) * 4);
	margin-right: calc(-1 * var(--Row) * 2);
}

main>section aside svg+* {
	overflow: hidden;
	padding-left: calc(var(--Row) * 2);
}

.chain div:not([class])+.unknown-link hr {
	display: none; /* SALE — Faudrait l'enlever dans le XSLT */
}

use {
	fill: currentColor;
}

main>section.is-invisible [data-parallax] {
	--ScrollDelay: 0ms;
	transition: inherit;
}

main>section>header>small:first-child {
	position: sticky;
	top: var(--Row);
	margin-bottom: calc(var(--Row) * 2);
}
main>section>header {
	display: contents;
}
main>section {
	align-self: stretch;
	padding: var(--Row);
	min-height: 100vh; /* À CHANGER DANS LE BON FICHIER */
}

@media (orientation: landscape) {
	main>section {
		padding-left: calc(var(--Row) * 3);
	}
}

main>section>aside {
	margin-top: var(--Row);
	margin-bottom: var(--Row);
	align-self: flex-start;
}

main>section>header>small:first-child {
	--ScaleLevel: var(--Short);
	font-weight: 700;
}

main>section>header>:last-child,
main>section>article,
main>section>header+section {
	margin-bottom: auto;
}
main>section>section>* {
	/* display: inline-block; */
}

main>section>section>h2 {
	display: block;
	column-span: all;
	--ScaleLevel: var(--Base);
}
main>section p>b:only-child {
	font-size: 1.4125em;
	display: block;
}

h1 {
	font-weight: 700;
}
h1 span {
	white-space: nowrap;
}
i>svg {
	height: 1ch;
	margin-left: .5em;
	display: inline-block;
}

aside li {
	margin-top: 0;
}
main>section h1 {
	max-width: 26ch;
}
main>section>aside {
	margin-left: auto;
	margin-right: var(--Row);
	position: absolute;
	top: 0;
	right: 0;
}

aside details {
	width: 30ch;
	max-width: 100%;
}

main>section>*+* {
	margin-top: var(--Row);
}

main>section>section aside {
	padding: var(--Row);
	border: 1px solid var(--tr-purple);
	border-radius: 8px;
	/* align-self: flex-start; */
	background-color: var(--ColorBg);
	background-image: linear-gradient(to top, var(--tr-purple), var(--tr-purple) 100%);
	--Color: var(--dk-brown);
}

main>section>section {
	--DivItemGutter: calc(var(--Row) * 2);
}

main>section>section div>div>* {
	--DivItemGutter: 0;
}
main>section>section div {
	align-items: baseline;
}

main>section>section header>h2,
main>section>section header>h3,
main>section>section header>small {
	--ScaleLevel: var(--Short);
	color: inherit;
	line-height: calc(var(--Row) * .5);
}

main>section>section div header {
	min-width: calc(var(--Row) * 5);
	flex-shrink: 0;
	flex-grow: 0;
}
main>section>section div header>*:last-child,
main>section>header>small:first-child {
	display: flex;
	align-items: baseline;
}

main>section>section div header>*:last-child:after,
main>section>header>small:first-child:after {
	content: '';
	display: block;
	flex-basis: 0;
	flex-grow: 1;
	border-top: 1px solid var(--ltr-brown);
	margin-left: .25em;
}

main>section>section div div {
	flex-grow: 4;
}
main>section>section>div>div {
	--DivDisplay: block;
	column-width: calc(var(--Row) * 10);
	column-count: 2;
	column-gap: var(--Row);
}

main>section.is-invisible [data-parallax] {
	--ScrollDelay: 0ms;
}

.chain {
	/* --DivItemBasis: 0; */
	/* --DivItemGrow: 0; */
}

* {
	/* outline: 1px dashed lightgrey; */
}
